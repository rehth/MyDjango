"""
Django settings for fresh365 project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '6#sl@xjc%--qn_&9o4sb(+&i@gv@3!%r9=gk)f1u0zw@xa0mwj'

# SECURITY WARNING: don't run with debug turned on in production!
# 调试模式
DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'tinymce',    # 富文本
    'haystack',    # 全文检索框架
    'apps.cart',   # 购物车模块
    'apps.goods',   # 商品模块
    'apps.orders',   # 订单模块
    'apps.user',   # 用户模块
    'celery_tasks',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'fresh365.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'fresh365.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'fresh365',  # 数据库名称
        'HOST': 'localhost',  # 数据库主机
        'PORT': '3306',  # 数据库端口
        'USER': 'root',  # 数据库用户名
        'PASSWORD': 'mysql',  # 数据库密码
    }
}

# 使用Django的认证系统的模型类
AUTH_USER_MODEL = 'user.User'

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/
# 语言
LANGUAGE_CODE = 'zh-Hans'   # 'en-us'
# 时区
TIME_ZONE = 'Asia/Shanghai'    # 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
# 配置静态文件加载路径
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

# 富文本编辑器配置
TINYMCE_DEFAULT_CONFIG = {
    'theme': 'advanced',
    'width': 600,
    'height': 400,
}

# 发送邮件的服务器
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.163.com'
EMAIL_PORT = 25
# 发送邮件的邮箱
EMAIL_HOST_USER = 'zhangqianjuns@163.com'
# 在邮箱中设置的客户端授权密码
EMAIL_HOST_PASSWORD = 'qwer1234'
# 收件人看到的发件人
EMAIL_FROM = 'fresh365<zhangqianjuns@163.com>'

# 设置django的缓存－redis
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/2",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}
# 设置sessions存储在缓存
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
SESSION_CACHE_ALIAS = "default"

# 设置login页面jj
LOGIN_URL = '/user/login'

# 设置FastDFS
# 1.配置文件存储类型
DEFAULT_FILE_STORAGE = 'utils.FastDFS.FastDFS.FDFSStorage'
# 2.配置FastDFS客户端的配置文件路径
FDFS_CONF_CLIENT = './utils/FastDFS/client.conf'
# 3.配置FastDFS服务器的url
FDFS_SERVER_URL = 'http://127.0.0.1:8888/'

# haystack全文检索框架的配置
HAYSTACK_CONNECTIONS = {
    'default': {
        # haystack框架用到的引擎
        'ENGINE': 'haystack.backends.whoosh_cn_backend.WhooshEngine',
        # 索引文件路径
        'PATH': os.path.join(BASE_DIR, 'whoosh_index'),
    },
}

# haystack控制每页显示数量
HAYSTACK_SEARCH_RESULTS_PER_PAGE = 1

# 支付宝接口调用params
ALIPAY_APPID = '2016090800463027'



